{
  "name": "Maneuvers: Trip Attack",
  "type": "feat",
  "img": "systems/dnd5e/icons/skills/yellow_37.jpg",
  "data": {
    "description": {
      "value": "<p>When you hit a creature with a weapon attack, you can expend one superiority die to attempt to knock the target down. You add the superiority die to the attackâ€™s damage roll, and if the target is Large or smaller, it must make a Strength saving throw. On a failed save, you knock the target prone.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB",
    "activation": {
      "type": "none",
      "cost": null,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": ""
    },
    "uses": {
      "value": null,
      "max": "",
      "per": ""
    },
    "consume": {
      "type": "attribute",
      "target": "",
      "amount": 1
    },
    "ability": "",
    "actionType": "util",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "requirements": "Fighter 3",
    "recharge": {
      "value": null,
      "charged": false
    },
    "attunement": 0
  },
  "effects": [
    {
      "_id": "rnVwO5B1LworJCtY",
      "changes": [
        {
          "key": "flags.dnd5e.DamageBonusMacro",
          "mode": 0,
          "value": "ItemMacro.Maneuvers: Trip Attack",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "systems/dnd5e/icons/skills/yellow_37.jpg",
      "label": "Maneuvers: Trip Attack",
      "origin": "Item.2kG19Y9hHFRb7GYt",
      "transfer": false,
      "flags": {
        "dae": {
          "selfTarget": false,
          "stackable": "none",
          "durationExpression": "",
          "macroRepeat": "none",
          "specialDuration": [],
          "transfer": false
        },
        "core": {
          "statusId": ""
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "tint": null,
      "selectedKey": "flags.dnd5e.DamageBonusMacro"
    }
  ],
  "flags": {
    "core": {
      "sourceId": "Item.2kG19Y9hHFRb7GYt"
    },
    "rest-recovery": {
      "data": {
        "recovery": {
          "enabled": false
        }
      }
    },
    "midi-qol": {
      "effectActivation": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": true
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Maneuvers: Trip Attack",
          "type": "script",
          "author": "otqBqyqMuTGDffTr",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "//trip attack\n\ntry {\n\n\tif (args[0].tag !== \"DamageBonus\" || ![\"mwak\", \"rwak\"].includes(args[0].itemData.data.actionType)|| args[0].hitTargetUuids.length < 1) return {};\n\tconst tokenOrActor = await fromUuid(args[0].tokenUuid);\n\tconst tactor = tokenOrActor.actor ? tokenOrActor.actor : tokenOrActor;\n\tconst tokenOrActorTarget = await fromUuid(args[0].hitTargetUuids[0]);\n    const tactorTarget = tokenOrActorTarget.actor ? tokenOrActorTarget.actor : tokenOrActorTarget;\n\tconst die = tactor.data.data.scale[\"battle-master\"][\"combat-superiority-die\"].slice(1);\n    let dieCount = Object.values(tactor.data.data.resources).find(r => r.label === \"Combat Superiority\");\n\t\n\tif (die && dieCount && dieCount.value > 0) {\n\n\t\tlet dialog = new Promise((resolve, reject) => {\n\t\t\tnew Dialog({\n\t\t\ttitle: \"Trip Attack: Usage Configuration\",\n\t\t\tcontent: `\n\t\t\t<form id=\"use-form\">\n\t\t\t\t<p>` + game.i18n.format(\"DND5E.AbilityUseHint\", {name: \"Maneuvers: Trip Attack\", type: \"feature\"}) + `</p>\n\t\t\t\t<p>Use a Superiority Die to use Trip Attack?</p>\n\t\t\t\t<p>(` + dieCount.value + ` Superiority Die Remaining)</p>\n\t\t\t</form>\n\t\t\t`,\n\t\t\tbuttons: {\n\t\t\t\tone: {\n\t\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\t\tlabel: \"Confirm\",\n\t\t\t\t\tcallback: () => resolve(true)\n\t\t\t\t},\n\t\t\t\ttwo: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: \"Cancel\",\n\t\t\t\t\tcallback: () => {resolve(false)}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: \"two\",\n\t\t    close: callBack => {resolve(false)}\n\t\t\t}).render(true);\n\t\t});\n\t\tmaneuver = await dialog;\n\t\t\n\t\tif (!maneuver) return {};\n\t\t\n\t\tdieCount = Object.values(tactor.data.data.resources).find(r => r.label === \"Combat Superiority\");\n\t\tif (dieCount.value < 1) {\n\t\t\tui.notifications.warn(\"Trip Attack: No Superiority Die Remaining\");\n\t\t\treturn {};\n\t\t} else {\n\t\t\tawait tactor.update({ 'data.resources.primary.value' : dieCount.value - 1 });\n\t\t}\n\t\t\n        let canProne = tactorTarget.data.data.traits.size !== \"grg\" && tactorTarget.data.data.traits.size !== \"huge\";\n\t\tif (canProne) {\n\t\t\tconst rollData = tactor.getRollData();\n\t\t\tconst strDC = 8 + rollData.attributes.prof + rollData.abilities.str.mod;\n\t\t\tconst dexDC = 8 + rollData.attributes.prof + rollData.abilities.dex.mod;\n\t\t\tconst saveDC = strDC > dexDC ? strDC : dexDC;\n            const resist = [\"Sure-Footed\", \"Prone Resilience\"];\n            const getResist = tactorTarget.items.find(i => resist.includes(i.name)) || tactorTarget.effects.find(i => resist.includes(i.data.label));\n            const ability = \"str\";\n            const rollOptions = getResist ? { request: \"save\", targetUuid: tactorTarget.uuid, ability: ability, advantage: true } : { request: \"save\", targetUuid: tactorTarget.uuid, ability: ability };\n\t\t\tlet roll = await MidiQOL.socket().executeAsGM(\"rollAbility\", rollOptions);\n            if (game.dice3d) game.dice3d.showForRoll(roll);\n\t\t\tif (roll.total < saveDC) {\n\t\t\t\tconst hasEffectApplied = await game.dfreds.effectInterface.hasEffectApplied(\"Prone\", args[0].hitTargetUuids[0]);\n                if (!hasEffectApplied) {\n                    game.dfreds.effectInterface.addEffect({ effectName: \"Prone\", uuid: tactorTarget.uuid });\n                }\n            }\n\t\t} else {\n\t\t\tui.notifications.warn(\"Trip Attack: Target too Large to be Knocked Prone\");\n\t\t}\n\t\t\n\t\tconst diceMult = args[0].isCritical ? 2: 1;\n\t\tconst damageType = args[0].item.data.damage.parts[0][1];\n\t\t\n\t\treturn {damageRoll: `${diceMult}${die}[${damageType}]`, flavor: \"Trip Attack\"};\n\t}\n} catch(err) {\n\tconsole.error(`${args[0].itemData.name} - maneuver macro`, err);\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        }
      }
    },
    "scene-packer": {
      "sourceId": "Item.P1ST8AP8K3e9pON3"
    },
    "exportSource": {
      "world": "Curse of Strahd",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.3"
    }
  }
}