{
  "name": "Stench",
  "type": "feat",
  "img": "icons/commodities/tech/smoke-bomb-purple.webp",
  "data": {
    "description": {
      "value": "<section class=\"secret\"><p>Any creature that starts its turn within <strong>5 ft.</strong> of the ghast must succeed on a <strong>DC 10 Constitution saving throw</strong> or be poisoned until the start of its next turn. On a successful saving throw, the creature is immune to the ghast's Stench for 24 hours.</p></section><p>Any creature that starts its turn within <strong>5 ft.</strong> of the ghast must succeed on a Constitution saving throw.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "",
    "activation": {
      "type": "",
      "cost": null,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "turn"
    },
    "target": {
      "value": 5,
      "width": null,
      "units": "ft",
      "type": "radius"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "self"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "con",
      "dc": 10,
      "scaling": "flat"
    },
    "requirements": "",
    "recharge": {
      "value": null,
      "charged": false
    }
  },
  "effects": [
    {
      "_id": "v2jshwcvk8k2alpd",
      "changes": [
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "@token",
          "priority": "20"
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "icons/commodities/tech/smoke-bomb-purple.webp",
      "label": "Stench",
      "origin": "Actor.qLyRmlnwvOrILVJW.Item.gBiHo206x7uGoySO",
      "transfer": true,
      "flags": {
        "dae": {
          "selfTarget": false,
          "stackable": "multi",
          "durationExpression": "",
          "macroRepeat": "startEveryTurn",
          "specialDuration": [],
          "transfer": true
        },
        "core": {
          "statusId": ""
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": true,
          "aura": "All",
          "radius": 5,
          "alignment": "",
          "type": "",
          "ignoreSelf": true,
          "height": true,
          "hidden": false,
          "displayTemp": true,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "tint": null,
      "selectedKey": "macro.itemMacro"
    }
  ],
  "flags": {
    "rest-recovery": {
      "data": {
        "recovery": {
          "enabled": false
        }
      }
    },
    "midi-qol": {
      "effectActivation": false
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "enhanced-terrain-layer": {
      "multiple": null,
      "elevation": null,
      "depth": null,
      "environment": ""
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Stench",
          "type": "script",
          "author": "otqBqyqMuTGDffTr",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "// stench\n\nconst lastArg = args[args.length - 1];\nconst item = await fromUuid(lastArg.efData.origin);\nconst caster = item.parent;\nconst target = await fromUuid(lastArg.actorUuid);\nconst tactor = target.actor ? target.actor : target;\nif (getProperty(tactor.data.flags, \"midi-qol.ghoulStenchImmunity\") || tactor.data.data.traits.ci.value.includes(\"poisoned\")) return;\n\nif (args[0] === \"each\") {\n    const targetUuid = lastArg.actorUuid;\n    const rollOptions = { chatMessage: true, fastForward: true };\n    const roll = await MidiQOL.socket().executeAsGM(\"rollAbility\", { request: \"save\", targetUuid: targetUuid, ability: \"con\", options: rollOptions });\n    if (game.dice3d) game.dice3d.showForRoll(roll);\n\n    if (roll.total < 10) {\n        let effectData = {\n            label: \"Poisoned\",\n            origin: args[0].uuid,\n            disabled: false,\n            flags: { dae: { specialDuration: [\"turnStart\"] } },\n            duration: {rounds: 1, turns: 1, startTime: game.time.worldTime},\n            changes: [\n                { key: `StatusEffect`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: \"Convenient Effect: Poisoned\", priority: 20 },\n            ]\n        };\n        await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: targetUuid, effects: [effectData] });\n    } else {\n            let effectData = {\n            label: \"Ghoul Stench Immunity\",\n            origin: args[0].uuid,\n            disabled: false,\n            flags: { dae: { specialDuration: [\"LongRest\"] } },\n            changes: [\n                { key: `flags.midi-qol.ghoulStenchImmunity`, mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, value: caster.uuid, priority: 20 },\n            ]\n        };\n        await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: targetUuid, effects: [effectData] });\n    }\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "_id": null,
        "name": "Stench",
        "type": "script",
        "author": "ckiTPzlaPztdkjV6",
        "img": "icons/svg/dice-target.svg",
        "scope": "global",
        "command": "// stench\n\nconst lastArg = args[args.length - 1];\nconst item = await fromUuid(lastArg.efData.origin);\nconst caster = item.parent;\nconst target = await fromUuid(lastArg.actorUuid);\nconst tactor = target.actor ? target.actor : target;\nif (getProperty(tactor.data.flags, \"midi-qol.ghoulStenchImmunity\") || tactor.data.data.traits.ci.value.includes(\"poisoned\")) return;\n\nif (args[0] === \"each\") {\n    const targetUuid = lastArg.actorUuid;\n    const dc = 10;\n    const resist = [\"Dwarven Resilience\", \"Duergar Resilience\", \"Stout Resilience\", \"Poison Resilience\"];\n    let getResist = tactorTarget.items.find(i => resist.includes(i.name));\n    const rollOptions = getResist ? { chatMessage: true, fastForward: true, advantage: true } : { chatMessage: true, fastForward: true };\n    const roll = await MidiQOL.socket().executeAsGM(\"rollAbility\", { request: \"save\", targetUuid: targetUuid, ability: \"con\", options: rollOptions });\n    if (game.dice3d) game.dice3d.showForRoll(roll);\n\n    if (roll.total < dc) {\n        let effectData = {\n            label: \"Poisoned\",\n            origin: args[0].uuid,\n            disabled: false,\n            flags: { dae: { specialDuration: [\"turnStart\"] } },\n            changes: [\n                { key: `StatusEffect`, mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM, value: \"Convenient Effect: Poisoned\", priority: 20 },\n            ]\n        };\n        await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: targetUuid, effects: [effectData] });\n    } else {\n            let effectData = {\n            label: \"Ghoul Stench Immunity\",\n            origin: args[0].uuid,\n            disabled: false,\n            flags: { dae: { specialDuration: [\"LongRest\"] } },\n            changes: [\n                { key: `flags.midi-qol.ghoulStenchImmunity`, mode: CONST.ACTIVE_EFFECT_MODES.OVERRIDE, value: caster.uuid, priority: 20 },\n            ]\n        };\n        await MidiQOL.socket().executeAsGM(\"createEffects\", { actorUuid: targetUuid, effects: [effectData] });\n    }\n}",
        "folder": null,
        "sort": 0,
        "permission": {
          "default": 0
        },
        "flags": {}
      }
    },
    "scene-packer": {
      "hash": "408e786b1aa201fd20654c9242721d94f87176be",
      "sourceId": "Item.iQcptbg7CbdmpVF6"
    },
    "core": {
      "sourceId": "Item.iQcptbg7CbdmpVF6"
    },
    "exportSource": {
      "world": "dnd5e",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.3"
    }
  }
}