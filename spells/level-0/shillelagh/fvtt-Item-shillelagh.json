{
  "name": "Shillelagh",
  "type": "spell",
  "img": "https://assets.forge-vtt.com/bazaar/systems/dnd5e/assets/icons/spells/enchant-jade-1.jpg",
  "data": {
    "description": {
      "value": "<p>The wood of a club or quarterstaff you are holding is imbued with nature's power. For the duration, you can use your spellcasting ability instead of Strength for the attack and damage rolls of melee attacks using that weapon, and the weapon's damage die becomes a d8. The weapon also becomes magical, if it isn't already. The spell ends if you cast it again or if you let go of the weapon.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB pg. 275",
    "activation": {
      "type": "bonus",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "minute"
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "self"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "touch"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": null,
    "damage": {
      "parts": [],
      "versatile": "",
      "value": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell",
      "value": ""
    },
    "level": 0,
    "school": "trs",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": true,
      "material": true,
      "ritual": false,
      "concentration": false
    },
    "materials": {
      "value": "A shamrock leaf, and a club or quarterstaff",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    },
    "attributes": {
      "spelldc": 10
    }
  },
  "effects": [
    {
      "_id": "x3I3PP0wLDynd8JN",
      "flags": {
        "dae": {
          "transfer": false,
          "stackable": false,
          "specialDuration": [],
          "macroRepeat": "none"
        },
        "ActiveAuras": {
          "isAura": false,
          "ignoreSelf": false,
          "hidden": false,
          "height": false,
          "aura": "None",
          "radius": null
        }
      },
      "changes": [
        {
          "key": "macro.itemMacro",
          "value": "",
          "mode": 0,
          "priority": 0
        }
      ],
      "disabled": false,
      "duration": {
        "startTime": null
      },
      "icon": "systems/dnd5e/icons/spells/enchant-jade-1.jpg",
      "label": "Shillelagh",
      "origin": "Actor.ZaVJJWXkzU603fLE.OwnedItem.vtUhpbyJYzB2J9ok",
      "tint": null,
      "transfer": false
    }
  ],
  "flags": {
    "dynamiceffects": {
      "equipActive": false,
      "alwaysActive": false,
      "effects": [
        {
          "modSpecKey": "macro.execute",
          "value": "Shillelagh @target",
          "mode": "+",
          "targetSpecific": false,
          "id": 1,
          "itemId": "HgYH1Eb3LQ19tsjJ",
          "active": true,
          "_targets": [],
          "label": "Macro Execute"
        }
      ]
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Shillelagh",
          "type": "script",
          "author": "devnIbfBHb74U9Zv",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const lastArg = args[args.length - 1];\nlet tactor;\ntactor = MidiQOL.MQfromActorUuid(lastArg.actorUuid);\nlet weapons = tactor.items.filter(i => i.data.type === `weapon`);\nlet weapon_content = ``;\n\nfor (let weapon of weapons) {\n    weapon_content += `<option value=${weapon.id}>${weapon.name}</option>`;\n}\nif (args[0] === \"on\") {\n    let content = `\n<div class=\"form-group\">\n  <label>Weapons : </label>\n  <select name=\"weapons\">\n    ${weapon_content}\n  </select>\n</div>`;\n\n    new Dialog({\n        title: \"Choose a club or quarterstaff\",\n        content,\n        buttons:\n        {\n            Ok:\n            {\n                label: `Ok`,\n                callback: (html) => {\n                    let itemId = html.find('[name=weapons]')[0].value;\n                    let weaponItem = tactor.items.get(itemId);\n                    let copy_item = duplicate(weaponItem.toObject());\n                    DAE.setFlag(tactor, `shillelagh`, {\n                        id : itemId,\n                        damage : copy_item.data.damage.parts[0][0]    \n                    });\n                    let damage = copy_item.data.damage.parts[0][0];\n                    var newdamage = damage.replace(/1d(4|6)/g,\"1d8\");\n                    copy_item.data.damage.parts[0][0] = newdamage;\n                    copy_item.data.ability = \"wis\";\n                    tactor.updateEmbeddedDocuments(\"Item\", [copy_item]);\n                    ChatMessage.create({content: copy_item.name + \" is empowered\"});\n                }\n            },\n            Cancel:\n            {\n                label: `Cancel`\n            }\n        }\n    }).render(true);\n}\n\nif (args[0] === \"off\") {\n    let flag = DAE.getFlag(tactor, `shillelagh`);\n    let weaponItem = tactor.items.get(flag.id);\n    let copy_item = duplicate(weaponItem.toObject());\n    copy_item.data.damage.parts[0][0] = flag.damage;\n    copy_item.data.ability = \"\";\n    await tactor.updateEmbeddedDocuments(\"Item\", [copy_item]);\n    DAE.unsetFlag(tactor, `shillelagh`);\n    ChatMessage.create({content: copy_item.name + \" returns to normal\"});\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "_id": null,
        "name": "Shillelagh",
        "type": "script",
        "author": "ckiTPzlaPztdkjV6",
        "img": "icons/svg/dice-target.svg",
        "scope": "global",
        "command": "// shillelagh\n\nconst lastArg = args[args.length - 1];\nconst tokenOrActor = await fromUuid(lastArg.actorUuid);\nconst tactor = tokenOrActor.actor ? tokenOrActor.actor : tokenOrActor;\nconst DAEItem = lastArg.efData.flags.dae.itemData;\n\n/**\n * Select for weapon\n */\nif (args[0] === \"on\") {\n    const weapons = tactor.items.filter((i) => i.data.data.baseItem === \"quarterstaff\" || i.data.data.baseItem === \"club\");\n    let weapon_content = \"\";\n\n    //Filter for weapons\n    weapons.forEach((weapon) => {\n        weapon_content += `<label class=\"radio-label\">\n    <input type=\"radio\" name=\"weapon\" value=\"${weapon.id}\">\n    <img src=\"${weapon.img}\" style=\"border:0px; width: 50px; height:50px;\">\n    ${weapon.data.name}\n    </label>`;\n    });\n\n    let content = `\n        <style>\n        .shillelagh .form-group {\n            display: flex;\n            flex-wrap: wrap;\n            width: 100%;\n            align-items: flex-start;\n        }\n\n        .shillelagh .radio-label {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            text-align: center;\n            justify-items: center;\n            flex: 1 0 25%;\n            line-height: normal;\n        }\n\n        .shillelagh .radio-label input {\n            display: none;\n        }\n\n        .shillelagh img {\n            border: 0px;\n            width: 50px;\n            height: 50px;\n            flex: 0 0 50px;\n            cursor: pointer;\n        }\n\n        /* CHECKED STYLES */\n        .shillelagh [type=radio]:checked + img {\n            outline: 2px solid #f00;\n        }\n        </style>\n        <form class=\"shillelagh\">\n        <div class=\"form-group\" id=\"weapons\">\n            ${weapon_content}\n        </div>\n        </form>\n    `;\n\n    new Dialog({\n        content,\n        buttons: {\n        ok: {\n            label: `Ok`,\n            callback: (html) => {\n                const itemId = $(\"input[type='radio'][name='weapon']:checked\").val();\n                const weaponItem = tactor.items.get(itemId);\n                let copyItem = duplicate(weaponItem);\n                DAE.setFlag(tactor, \"shillelagh\", {\n                    weapon: itemId,\n                        ability: copyItem.data.ability,\n                        damage : copyItem.data.damage.parts[0][0],\n                        magic : copyItem.data.properties.mgc\n                });\n                if (copyItem.data.attackBonus === \"\") copyItem.data.attackBonus = \"0\";\n                let damage = copyItem.data.damage.parts[0][0];\n                var newDamage = damage.replace(/1d(4|6)/g,\"1d8\");\n                copyItem.data.damage.parts[0][0] = newDamage;\n                copyItem.data.properties.mgc = true;\n                copyItem.data.ability = tactor.data.data.attributes.spellcasting;\n                copyItem.name = \"Imbued \" + copyItem.name;\n                tactor.updateEmbeddedDocuments(\"Item\", [copyItem]);\n            },\n        },\n        cancel: {\n            label: `Cancel`,\n        },\n        },\n    }).render(true);\n}\n\n//Revert weapon and unset flag.\nif (args[0] === \"off\") {\n    try {\n        const { weapon, ability, damage, magic } = DAE.getFlag(tactor, \"shillelagh\");\n        const weaponItem = tactor.items.get(weapon);\n        let copyItem = duplicate(weaponItem);\n        copyItem.data.ability = ability;\n        copyItem.name = copyItem.name.replace(\"Imbued \", \"\");\n        copyItem.data.damage.parts[0][0] = damage;\n        copyItem.data.properties.mgc = magic;\n        tactor.updateEmbeddedDocuments(\"Item\", [copyItem]);\n        DAE.unsetFlag(tactor, \"shillelagh\");\n    } catch (err) {\n        console.error('shillelagh macro error');\n    }\n}",
        "folder": null,
        "sort": 0,
        "permission": {
          "default": 0
        },
        "flags": {}
      }
    },
    "dae": {
      "migrated": true
    },
    "autoanimations": {
      "killAnim": false,
      "override": false,
      "animType": "t1",
      "animName": "",
      "hmAnim": "a1",
      "color": "n1",
      "uaStrikeType": "physical",
      "dtvar": "dt1",
      "explosion": false,
      "explodeVariant": "ev1",
      "explodeColor": "ec1",
      "explodeRadius": "0",
      "explodeLoop": "1",
      "selfRadius": "5",
      "animTint": "#ffffff",
      "auraOpacity": 0.75,
      "ctaOption": false,
      "teleDist": 30
    },
    "favtab": {
      "isFavorite": true
    },
    "core": {
      "sourceId": "Item.qUrSuOAn8P3c9Jue"
    },
    "cf": {
      "id": "temp_5o7edvfx9a",
      "color": "#000000"
    },
    "betterRolls5e": {
      "quickDesc": {
        "value": true,
        "altValue": true
      },
      "quickProperties": {
        "value": true,
        "altValue": true
      },
      "quickVersatile": {
        "value": false,
        "altValue": false
      },
      "quickOther": {
        "value": true,
        "altValue": true
      },
      "quickFlavor": {
        "value": true,
        "altValue": true
      }
    },
    "scene-packer": {
      "hash": "03cb6c0f2f3059e18af046804c163eb04010417c",
      "sourceId": "Item.9uUgh7Sn04AYBFlB"
    },
    "rest-recovery": {
      "data": {
        "recovery": {
          "enabled": false
        }
      }
    },
    "exportSource": {
      "world": "dnd5e",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.3"
    }
  }
}