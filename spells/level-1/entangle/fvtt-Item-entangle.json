{
  "name": "Entangle",
  "type": "spell",
  "img": "systems/dnd5e/icons/spells/vines-acid-2.jpg",
  "data": {
    "description": {
      "value": "<p>Grasping weeds and vines sprout from the ground in a 20-foot square starting from a point within range. For the duration, these plants turn the ground in the area into difficult terrain.</p>\n<p>A creature in the area when you cast the spell must succeed on a Strength saving throw or be @Compendium[dnd5e.rules.Restrained]{restrained} by the entangling plants until the spell ends. A creature @Compendium[dnd5e.rules.Restrained]{restrained} by the plants can use its action to make a Strength check against your spell save DC. On a success, it frees itself.</p>\n<p>When the spell ends, the conjured plants wilt away.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "Basic Rules, Player's Handbook pg 238",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": 1,
      "units": "minute"
    },
    "target": {
      "value": 20,
      "width": null,
      "units": "ft",
      "type": "square"
    },
    "range": {
      "value": 90,
      "long": null,
      "units": "ft"
    },
    "uses": {
      "value": null,
      "max": "",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "save",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "str",
      "dc": null,
      "scaling": "spell"
    },
    "level": 1,
    "school": "con",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": true,
      "material": false,
      "ritual": false,
      "concentration": true
    },
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "none",
      "formula": ""
    }
  },
  "effects": [
    {
      "label": "Entangle",
      "icon": "systems/dnd5e/icons/spells/vines-acid-2.jpg",
      "changes": [
        {
          "key": "StatusEffect",
          "mode": 0,
          "value": "Convenient Effect: Restrained",
          "priority": "20"
        },
        {
          "key": "macro.itemMacro",
          "mode": 0,
          "value": "",
          "priority": "20"
        }
      ],
      "duration": {
        "startTime": null
      },
      "tint": null,
      "transfer": false,
      "disabled": false,
      "flags": {
        "dae": {
          "transfer": false,
          "stackable": "none",
          "selfTarget": false,
          "durationExpression": "",
          "macroRepeat": "startEveryTurn",
          "specialDuration": []
        },
        "ddbimporter": {
          "disabled": false
        },
        "midi-qol": {
          "forceCEOff": true
        },
        "core": {
          "statusId": ""
        },
        "dnd5e-helpers": {
          "rest-effect": "Ignore"
        },
        "ActiveAuras": {
          "isAura": false,
          "aura": "None",
          "radius": null,
          "alignment": "",
          "type": "",
          "ignoreSelf": false,
          "height": false,
          "hidden": false,
          "displayTemp": false,
          "hostile": false,
          "onlyOnce": false
        }
      },
      "_id": "176msu6m9pzpju25",
      "selectedKey": [
        "StatusEffect",
        "macro.itemMacro"
      ]
    }
  ],
  "flags": {
    "ddbimporter": {
      "id": 136716,
      "definitionId": 2085,
      "entityTypeId": 435869154,
      "dndbeyond": {
        "lookup": "generic",
        "lookupName": "generic",
        "level": null,
        "castAtLevel": null
      },
      "originalName": "Entangle",
      "sources": [
        {
          "sourceId": 1,
          "pageNumber": null,
          "sourceType": 2
        },
        {
          "sourceId": 2,
          "pageNumber": 238,
          "sourceType": 1
        }
      ],
      "tags": [
        "Control"
      ],
      "version": "2.9.59",
      "effectsApplied": true
    },
    "betterRolls5e": {
      "quickVersatile": {
        "altValue": true
      },
      "quickCharges": {
        "value": {
          "use": true,
          "resource": true
        },
        "altValue": {
          "use": true,
          "resource": true
        }
      }
    },
    "midi-qol": {
      "onUseMacroName": "[preSave]ItemMacro",
      "effectActivation": false
    },
    "rest-recovery": {
      "data": {
        "recovery": {
          "enabled": false
        }
      }
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "core": {
      "sourceId": "Compendium.world.ddb-spells.ofM8qXjG0plYx0Q3"
    },
    "scene-packer": {
      "sourceId": "Item.r5o2pEWTeWmQtzgs",
      "hash": "d0df24346f6a7d7cc4890957e0434dc9f3b44a37"
    },
    "itemacro": {
      "macro": {
        "data": {
          "_id": null,
          "name": "Entangle",
          "type": "script",
          "author": "otqBqyqMuTGDffTr",
          "img": "icons/svg/dice-target.svg",
          "scope": "global",
          "command": "const lastArg = args[args.length - 1];\n  \nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\n\nasync function attemptRemoval(targetToken, condition, item) {\n    if (game.dfreds.effectInterface.hasEffectApplied(condition, targetToken.uuid)) {\n        new Dialog({\n        title: `Use action to attempt to remove ${condition}?`,\n        buttons: {\n            one: {\n            label: \"Yes\",\n            callback: async () => {\n                const caster = item.parent;\n                const saveDc = caster.data.data.attributes.spelldc;\n                const removalCheck = true;\n                const ability = \"str\";\n                const type = removalCheck ? \"check\" : \"save\";\n                const flavor = `${condition} (via ${item.name}) : ${CONFIG.DND5E.abilities[ability]} ${type} vs DC${saveDc}`;\n                const rollResult = removalCheck\n                ? (await targetToken.actor.rollAbilityTest(ability, { flavor })).total\n                : (await targetToken.actor.rollAbilitySave(ability, { flavor })).total;\n\n                if (rollResult >= saveDc) {\n                game.dfreds.effectInterface.removeEffect({ effectName: condition, uuid: targetToken.uuid });\n                } else {\n                if (rollResult < saveDc) ChatMessage.create({ content: `${targetToken.name} fails the ${type} for ${item.name}, still has the ${condition} condition.` });\n                }\n            },\n            },\n            two: {\n            label: \"No\",\n            callback: () => {},\n            },\n        },\n        }).render(true);\n    }\n}\n\nif (args[0] === \"each\") {\n    const targetToken = await fromUuid(lastArg.tokenUuid);\n    const condition = \"Restrained\";\n    const item = await fromUuid(lastArg.efData.origin);\n    attemptRemoval(targetToken, condition, item);\n}",
          "folder": null,
          "sort": 0,
          "permission": {
            "default": 0
          },
          "flags": {}
        },
        "_id": null,
        "name": "Entangle",
        "type": "script",
        "author": "ckiTPzlaPztdkjV6",
        "img": "icons/svg/dice-target.svg",
        "scope": "global",
        "command": "const lastArg = args[args.length - 1];\nlet tokenOrActor = await fromUuid(lastArg.actorUuid);\nlet tactor = tokenOrActor.actor ? tokenOrActor.actor : tokenOrActor;\n  \nasync function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\n\nasync function attemptRemoval(targetToken, condition, item) {\n    if (game.dfreds.effectInterface.hasEffectApplied(condition, targetToken.uuid)) {\n        new Dialog({\n        title: `Use action to attempt to remove ${condition}?`,\n        buttons: {\n            one: {\n            label: \"Yes\",\n            callback: async () => {\n                const caster = item.parent;\n                const saveDc = caster.data.data.attributes.spelldc;\n                const removalCheck = true;\n                const ability = \"str\";\n                const type = removalCheck ? \"abil\" : \"save\";\n                const targetUuid = targetToken.actor.uuid;\n                const rollOptions = { chatMessage: true, fastForward: true};\n                const roll = await MidiQOL.socket().executeAsGM(\"rollAbility\", { request: type, targetUuid: targetUuid, ability: ability, options: rollOptions });\n                if (game.dice3d) game.dice3d.showForRoll(roll);\n\n                if (roll.total >= saveDc) {\n                game.dfreds.effectInterface.removeEffect({ effectName: condition, uuid: targetToken.uuid });\n                } else {\n                    if (roll.total < saveDc) ChatMessage.create({ content: `${targetToken.name} fails the roll for ${item.name}, still has the ${condition} condition.` });\n                }\n            },\n            },\n            two: {\n            label: \"No\",\n            callback: () => {},\n            },\n        },\n        }).render(true);\n    }\n}\n\nif (args[0].tag === \"OnUse\" && lastArg.targetUuids.length > 0) {\n    const resist = [\"Land's Stride\"];\n    for (let i = 0; i < lastArg.targetUuids.length; i++) {\n        let tokenOrActorTarget = await fromUuid(lastArg.targetUuids[i]);\n        let tactorTarget = tokenOrActorTarget.actor ? tokenOrActorTarget.actor : tokenOrActorTarget;\n        let getResist = tactorTarget.items.find(i => resist.includes(i.name))\n        if (getResist) {\n            const effectData = {\n                changes: [\n                    {\n                        key: \"flags.midi-qol.advantage.ability.save.all\",\n                        mode: CONST.ACTIVE_EFFECT_MODES.CUSTOM,\n                        value: 1,\n                        priority: 20,\n                    }\n                ],\n                disabled: false,\n                flags: { dae: { specialDuration: [\"isSave\"] } },\n                icon: args[0].item.img,\n                label: `${args[0].item.name} Save Advantage`,\n            };\n            await tactorTarget.createEmbeddedDocuments(\"ActiveEffect\", [effectData]);\n        }\n    }\n}\n\nif (args[0] === \"each\") {\n    const targetToken = await fromUuid(lastArg.tokenUuid);\n    const condition = \"Restrained\";\n    const item = await fromUuid(lastArg.efData.origin);\n    attemptRemoval(targetToken, condition, item);\n}",
        "folder": null,
        "sort": 0,
        "permission": {
          "default": 0
        },
        "flags": {}
      }
    },
    "enhanced-terrain-layer": {
      "multiple": 2,
      "elevation": null,
      "depth": null,
      "environment": "plants"
    },
    "exportSource": {
      "world": "dnd5e",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.3"
    }
  }
}