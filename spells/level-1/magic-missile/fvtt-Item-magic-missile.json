{
  "name": "Magic Missile",
  "type": "spell",
  "img": "https://assets.forge-vtt.com/bazaar/systems/dnd5e/assets/icons/spells/fire-arrows-magenta-1.jpg",
  "data": {
    "description": {
      "value": "<p>You create three glowing darts of magical force. Each dart hits a creature of your choice that you can see within range. A dart deals 1d4 + 1 force damage to its target. The darts all strike simultaneously, and you can direct them to hit one creature or several.</p>\n<p><strong>Higher Levels.Â </strong>When you cast this spell using a spell slot of 2nd level or higher, the spell creates one more dart for each slot level above 1st.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB pg. 257",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": ""
    },
    "duration": {
      "value": null,
      "units": "inst"
    },
    "target": {
      "value": null,
      "width": null,
      "units": "",
      "type": "creature"
    },
    "range": {
      "value": 120,
      "long": 0,
      "units": "ft"
    },
    "uses": {
      "value": 0,
      "max": "0",
      "per": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": null
    },
    "ability": "",
    "actionType": "other",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [
        [
          "1d4 + 1[force]",
          "force"
        ]
      ],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell",
      "value": ""
    },
    "level": 1,
    "school": "evo",
    "components": {
      "value": "",
      "vocal": true,
      "somatic": true,
      "material": false,
      "ritual": false,
      "concentration": false
    },
    "materials": {
      "value": "",
      "consumed": false,
      "cost": 0,
      "supply": 0
    },
    "preparation": {
      "mode": "prepared",
      "prepared": false
    },
    "scaling": {
      "mode": "level",
      "formula": ""
    },
    "attunement": null
  },
  "effects": [],
  "flags": {
    "core": {
      "sourceId": "Compendium.dnd5e.spells.41JIhpDyM9Anm7cs"
    },
    "scene-packer": {
      "hash": "7fdfe82d5694658425797b2e6eaae38c92169cc5",
      "sourceId": "Item.JJkkSiNdcCwy8r9H"
    },
    "rest-recovery": {
      "data": {
        "recovery": {
          "enabled": false
        }
      }
    },
    "midi-qol": {
      "effectActivation": false,
      "onUseMacroName": "[preDamageRoll]ItemMacro"
    },
    "midiProperties": {
      "nodam": false,
      "fulldam": false,
      "halfdam": false,
      "rollOther": false,
      "critOther": false,
      "magicdam": false,
      "magiceffect": false,
      "concentration": false,
      "toggleEffect": false
    },
    "itemacro": {
      "macro": {
        "_id": null,
        "name": "Magic Missile",
        "type": "script",
        "author": "ckiTPzlaPztdkjV6",
        "img": "icons/svg/dice-target.svg",
        "scope": "global",
        "command": "// magic missile\n\n(async () => {\n    const lastArg = args[args.length - 1];\n    const tokenOrActor = await fromUuid(lastArg.tokenUuid);\n    const tactor = tokenOrActor.actor ? tokenOrActor.actor : tokenOrActor;\n    const itemSource = await fromUuid(lastArg.uuid);\n    const itemCopy = mergeObject(\n        duplicate(itemSource),\n        {\n            type: \"feat\",\n            flags: {\n                \"midi-qol\": {\n                    onUseMacroName: null, \n                },\n            },\n        },\n    );\n    const attackItem = new CONFIG.Item.documentClass(itemCopy, { parent: tactor });\n    const attacks = 2 + Number(lastArg.spellLevel);\n\n    async function wait(ms) { return new Promise(resolve => { setTimeout(resolve, ms); }); }\n\n    async function applyAttack(targetUuid) {\n        let rollOptions = { targetUuids: [targetUuid], showFullCard: false };\n        await MidiQOL.completeItemRoll(attackItem, rollOptions);\n    };\n\n    let workflow = await MidiQOL.Workflow.getWorkflow(lastArg.uuid);\n    await Object.assign(workflow, { targets: null, noAutoDamage: true });\n\n    if (lastArg.targets.length === 1) {\n        for (i = 0; i < attacks; i++) {\n            await wait(250);\n            await applyAttack(lastArg.targets[0].uuid);\n        }\n    } else if (lastArg.targets.length > 1) {\n        let targetContent = \"\";\n        lastArg.targets.forEach((t) => {\n            targetContent += `\n            <tr>\n                <td><img src=\"${t.data.img ?? t.img}\" style=\"border:0px; width: 100px; height:100px;\"></td>\n                <td><input type=\"num\" id=\"target\" min=\"0\" max=\"${attacks}\" name=\"${t.uuid}\"></td>\n            </tr>\n            `;\n        });\n        let content = `<p>You have currently <b>${attacks}</b> total ${lastArg.item.name} attacks.</p><form class=\"flexcol\"><table width=\"100%\"><tbody><tr><th>Target</th><th>Number Attacks</th></tr>${targetContent}</tbody></table></form>`;   \n        await new Dialog({\n            title: `${lastArg.item.name}`,\n            content: content,\n            buttons: {\n                confirm: {\n                    label: \"Confirm\", callback: async (html) => {\n                        let spentTotal = 0;\n                        let selected_targets = html.find('input#target');\n                        for (let get_total of selected_targets) {\n                            spentTotal += Number(get_total.value);\n                        }\n                        if (spentTotal > attacks) {\n                            errorMessage = `The spell fails, You assigned more attacks then you have.`;\n                            return ui.notifications.error(errorMessage);\n                        }\n                        if (spentTotal === 0) {\n                            errorMessage = `The spell fails, No attacks spent.`;\n                            return ui.notifications.error(errorMessage);\n                        }\n                        for (let target of selected_targets) {\n                            let attackNum = Number(target.value);\n                            if (attackNum) {\n                                for (i = 0; i < attackNum; i++) {\n                                    await wait(250);\n                                    await applyAttack(target.name);\n                                };\n                            };\n                        };\n                    },\n                },\n            },\n            close: {\n            },\n            default: \"close\"\n        }).render(true);\n    };\n})();",
        "folder": null,
        "sort": 0,
        "permission": {
          "default": 0
        },
        "flags": {}
      }
    },
    "cf": {
      "id": "temp_bo019z0gcv"
    },
    "exportSource": {
      "world": "dnd5e",
      "system": "dnd5e",
      "coreVersion": "9.280",
      "systemVersion": "1.6.3"
    }
  }
}